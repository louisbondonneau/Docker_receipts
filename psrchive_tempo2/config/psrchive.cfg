
###########################################################################
#
# FrequencyAppend::force_new_predictor - Force creation of a new predictor while frequency appending
#
# If true, frequency append will always create a new predictor.
# See bug report #400 for rationale behind this option. In brief, 
# it helps to fix a problem with predictor not spanning required 
# epochs in some cases.
# Setting this to true will adversly affect psrchive's performance.
# 
#
#FrequencyAppend::force_new_predictor = 0
###########################################################################
#
# ASP::tdiff_threshold - TDIFF threshold [ns]
#
# The tdiff threshold [0-255] used to discard integrations
# observation and those of the standard candle.
# -1: Do not use TDIFF correction.
#
#
# 25 would be the default tdiff
ASP::tdiff_threshold = 25

###########################################################################
#
# Append::must_match - Ensure that Archive parameters match [boolean]
#
# If true, then TimeAppend and FrequencyAppend (used by psradd) will fail
# if certain observational parameters do not match (see ArchiveMatch)
#
Append::must_match = 0

###########################################################################
#
# Archive::no_clobber - Default policy for overwriting archive files
#
# This variables controls the behaviour of psrchive during attempt 
# to overwrite an existing file while unloading a new archive.
#
# Archive::no_clobber = 0

###########################################################################
#
# Archive::unload_class - File format used if unload is not implemented
#
# If the file format used to load the data does not implement an unload 
# method, then the data will be converted to the name file format.
#
# Archive::unload_class = PSRFITS

###########################################################################
#
# BPP::maximum_relative_bandwidth - Tolerable bandwidth difference
#
# The Berkeley Pulsar Processing instruments can have varying bandwidths. 
# Set this parameter to the maximum value of the relative difference 
# that will be tolerated when determining if two archives match each other. 
# 
#
# BPP::maximum_relative_bandwidth = 0.005

###########################################################################
#
# Baseline::median_cut - Remove outliers from baseline using median
#
# Large outliers can skew the estimate of the off-pulse baseline mean and 
# standard deviation.  This parameter can be used to omit any phase bins 
# that are more than median_cut times the median difference from the 
# median from the median. [not a typo]
#
# Baseline::median_cut = 0

###########################################################################
#
# BaselineWindow::smooth - Baseline window smoothing function
#
# The BaselineWindow algorithm defines the off-pulse baseline by the
# the minimum phase of a smoothed version of the profile.  The smoothing 
# function can be either 'mean' or 'median'.
#
# BaselineWindow::smooth = mean

###########################################################################
#
# Calibrator::det_threshold - Tolerance to non-physical interval [sigma]
#
# Non-physical values of the determinant of the coherency matrix are 
# defined as less than -(det_threshold * sigma), where sigma is the error 
# in the estimate of the determinant due to noise.  If set to zero, 
# no check is performed.
#
# Calibrator::det_threshold = 0

###########################################################################
#
# Calibrator::interpolating - Maximum interpolation window [band fraction]
#
# The maximum number of channels over which a linear interpolation will 
# be performed is given by the number of frequency channels, nchan, 
# multiplied by interpolating.  If set to zero, no interpolation is performed.
#
# Calibrator::interpolating = 0

###########################################################################
#
# Calibrator::median_smoothing - Size of median filtering window [band fraction]
#
# The size of the window used during median filtering is given by the 
# number of frequency channels, nchan, multiplied by median_smoothing.
# If set to zero, no smoothing is performed.  A sensible value is around 0.05.
#
# Calibrator::median_smoothing = 0

###########################################################################
#
# Database::long_time_scale - Maximum time to flux calibrator [minutes]
#
# The maximum amount of time allowed between the epoch of an observation 
# and the epoch of the flux calibrator and/or reception calibrator used to 
# calibrate it.  By default, the long time scale is set to four weeks.
#
# Database::long_time_scale = 40320

###########################################################################
#
# Database::max_angular_separation - Maximum distance to poln calibrator [degrees]
#
# The maximum separation between the sky coordinates of an observations 
# and those of the reference calibrator used to calibrate it.
#
# Database::max_angular_separation = 5

###########################################################################
#
# Database::short_time_scale - Maximum time to poln calibrator [minutes]
#
# The maximum amount of time allowed between the epoch of an observation 
# and the epoch of the reference calibrator used to calibrate it. 
# By default, the long time scale is set to two hours.
#
# Database::short_time_scale = 120

###########################################################################
#
# FrequencyAppend::weight - Weighting policy
#
# The name of the algorithm used to weight each profile.
# Possible values: radiometer, time, snr, none
#
# FrequencyAppend::weight = radiometer

###########################################################################
#
# Match::max_frequency_difference - Maximum frequency difference [MHz]
#
# When comparing centre frequencies to determine if two archives match,
# allow them to differ at most by this value
#
#Match::max_frequency_difference = 0.1

###########################################################################
#
# Match::opposite_sideband - Allow sideband mixing [bool]
#
# When comparing bandwidths to determine if two archives match,
# allow them to have opposite signs
#
# Match::opposite_sideband = 0

###########################################################################
#
# Predictor::default - Default predictor type
#
# The default phase predictor model type: 'polyco' or 'tempo2'
#

Predictor::default = tempo2
#Predictor::default = polyco

###########################################################################
#
# Predictor::policy - Policy for generating new predictors
#
# The type of predictor constructed when generating a new 
# pulse phase prediction model (in Archive::update_model). 
# There are currently two policies for choosing the type of 
# the new predictor: 
# 
#  'input'   - same as the currently installed predictor 
#  'default' - determined by Predictor::default
#
Predictor::policy = default

###########################################################################
#
# Profile::baseline - Baseline estimation algorithm
#
# The name of the algorithm used to estimate the off-pulse baseline.
# Possible values: minimum, normal
#
# Profile::baseline = normal

###########################################################################
#
# Profile::default_duty_cycle - Duty cycle of baseline [turns]
#
# The default width of the window used to find the off-pulse baseline
# and compute its statistics
#
# Profile::default_duty_cycle = 0.15

###########################################################################
#
# Profile::peak_edges - Algorithm used to find peak edges
#
# The name of the algorithm used to estimate the rise and fall of the peak
# in the pulse profile. Possible values: cumulative, consecutive
#
# Profile::peak_edges = cumulative

###########################################################################
#
# Profile::rotate_in_phase_domain - none
#
# none
#
# Profile::rotate_in_phase_domain = 0

###########################################################################
#
# Profile::snr - Algorithm used to compute S/N
#
# The name of the algorithm used to estimate the signal-to-noise ratio
# of the pulse profile. Possible values: phase, fourier, square, adaptive, 
# and standard <filename.ar>
#
# Profile::snr = phase
# Profile::snr = square
# Profile::snr = fourier

###########################################################################
#
# Profile::swap - Virtual memory swap space filename base
#
# The Profile class can use an alternative virtual memory manager so that 
# the kernel swap space is not consumed when processing large files. 
# 
# This configuration parameter should be set the full path of a filename 
# to be used for page swapping; e.g. "/tmp/psrchive.swap" 
# 
# The filename will have a unique extension added so that multiple 
# processes will not conflict.
#
#Profile::swap = 

###########################################################################
#
# Profile::transition_duty_cycle - Duty cycle used to find transitions [turns]
#
# When searching for transitions between high and low states in a square 
# wave, such as an observation of the reference source (linear noise diode),
# a sliding window is used to compute the running mean.  The size of this 
# window is given by transition_duty_cycle times the number of bins
#
# Profile::transition_duty_cycle = 0.15

###########################################################################
#
# ReferenceCalibrator::smooth_bandpass - none
#
# none
#
# ReferenceCalibrator::smooth_bandpass = 0

###########################################################################
#
# Tempo2::keywords - Name of file containing tempo2-specific keywords
#
# When choosing a Generator with which to create a Predictor (and if tempo2 
# support is available) a list of keywords will be used to determine if a 
# tempo2 predictor should be generated.  The list of keywords is parsed 
# this file.
#
# Tempo2::keywords = /usr/local/share/tempo2.key

###########################################################################
#
# Tempo::maximum_rms - Maximum value of fit rms residual [turns]
#
# When generating a polyco with 'tempo -z', the rms between the best-fit 
# polynomial and the model is reported.  If the maximum_rms is not zero, 
# a warning will be issued if the rms reported by tempo exceeds this value.
#
# Tempo::maximum_rms = 1e-05

###########################################################################
#
# Tempo::minimum_nspan - Minimum value of 'nspan' [minutes]
#
# When generating a polyco with 'tempo -z', the following error can occur
# 
#   STOP  Nspan too small statement executed
# 
# This parameter, if set, puts a lower limit on the value of 'nspan' used.
#
# Tempo::minimum_nspan = 0

###########################################################################
#
# TimeAppend::chronological - Ensure chronological order [bool]
#
# If true, then TimeAppend::transform (used by psradd and Archive::append)
# will fail if sub-integrations are not appended in chronological order.
#
# TimeAppend::chronological = 0

###########################################################################
#
# TimeAppend::max_overlap - Maximum time overlap [seconds]
#
# If TimeAppend::chronological is set, then this parameter determines
# the maximum time by which the start time of a sub-integration may precede
# the end time of the previous sub-integration.
#
# TimeAppend::max_overlap = 30

###########################################################################
#
# WeightedFrequency::round_to_kHz - Round mean frequency to nearest kHz [boolean]
#
# If true, then WeightedFrequency (used by tscrunch and fscrunch)
# will round the weighted mean frequency to the nearest value in kHz
#
WeightedFrequency::round_to_kHz = 0

###########################################################################
#
# fluxcal::database - Standard candle input filename
#
# The name of the file from which flux densities, reference frequencies,
# and spectral indeces of commonly used flux calibrator sources are read.
#


# fluxcal::database = /usr/local/share/fluxcal.cfg

###########################################################################
#
# fluxcal::off - Standard candle off-source aliases filename
#
# The name of the file from which commonly used source name aliases for
# off-source flux calibrator observation are read.
#
# fluxcal::off = /usr/local/share/fluxcal.off

###########################################################################
#
# fluxcal::off_radius - Maximum distance to off-source [degrees]
#
# The maximum separation between the sky coordinates of an 'off-source'
# observation and those of the standard candle.
#
# fluxcal::off_radius = 2.5

###########################################################################
#
# fluxcal::on - Standard candle on-source aliases filename
#
# The name of the file from which commonly used source name aliases for
# on-source flux calibrator observation are read.
#
# fluxcal::on = /usr/local/share/fluxcal.on

###########################################################################
#
# fluxcal::on_radius - Maximum distance to on-source [degrees]
#
# The maximum separation between the sky coordinates of an 'on-source'
# observation and those of the standard candle.
#
# fluxcal::on_radius = 0.25

# LG AJOUT 2018/03/21 SUITE A ECHANGE AVEC KUO
Dispersion::barycentric_correction = 1
